{"version":3,"file":"chips.js","sourceRoot":"","sources":["../../../src/components/chips/chips.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACjD,OAAO,EAAE,eAAe,EAAE,MAAM,eAAe,CAAC;AAChD,OAAO,EAAE,cAAc,EAAE,MAAM,gBAAgB,CAAC;;IAY9C,wBAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;oBAJzB,EAAE;6BACgB,EAAE;sBAChB,EAAE;KAEwB;IAEzD,kCAAS,GAAT;QAAA,iBAiBC;QAfC,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,cAAc,EAAE;YACrD,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,QAAQ,EAAE,IAAI,CAAC,aAAa;YAC5B,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAA;QACF,IAAI,CAAC,YAAY,CAAC,UAAA,aAAa;YAE7B,EAAE,CAAC,CAAC,aAAa,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAC/B,MAAM,CAAC;aACR;YAED,KAAI,CAAC,aAAa,GAAG,aAAa,CAAC;SACpC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,EAAE,CAAC;KAChB;IAED,+BAAM,GAAN,UAAO,UAAU;QACf,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACpC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;gBAClD,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;aACjC;SACF;;QAGD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,EAAE;YACzD,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC;SACnB,CAAC,CAAC;KACJ;;gBA1CF,SAAS,SAAC;oBACT,QAAQ,EAAE,OAAO;oBACjB,WAAW,EAAE,YAAY;iBAC1B;;;;gBANQ,eAAe;;;yBASrB,KAAK,SAAC,MAAM;kCACZ,KAAK,SAAC,eAAe;2BACrB,KAAK,SAAC,QAAQ;;yBAZjB;;SAQa,cAAc","sourcesContent":["import { Component, Input } from '@angular/core';\nimport { ModalController } from 'ionic-angular';\nimport { ModalComponent } from '../modal/modal';\n\n@Component({\n  selector: 'chips',\n  templateUrl: 'chips.html'\n})\nexport class ChipsComponent {\n\n  @Input('list') list: any = [];\n  @Input('selectedItems') selectedItems: any = [];\n  @Input('extras') extras: any = {};\n\n  constructor(private modalController: ModalController) { }\n\n  openModal() {\n\n    let test = this.modalController.create(ModalComponent, {\n      list: this.list,\n      selected: this.selectedItems,\n      extras: this.extras\n    })\n    test.onDidDismiss(selectedItems => {\n\n      if (selectedItems === 'cancel') {\n        return;\n      }\n\n      this.selectedItems = selectedItems;\n    });\n\n    test.present();\n  }\n\n  remove(removeItem) {\n    for (let item in this.selectedItems) {\n      if (this.selectedItems[item].id === removeItem.id) {\n        delete this.selectedItems[item];\n      }\n    }\n\n    //remove empty elements from array\n    this.selectedItems = this.selectedItems.filter(function (el) {\n      return el != null;\n    });\n  }\n\n\n}\n"]}